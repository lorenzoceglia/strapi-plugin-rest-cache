import{_ as e,c as s,o as a,a as n}from"./app.4b6b3d2e.js";const u=JSON.parse('{"title":"Cache strategy configuration","description":"","frontmatter":{"title":"Cache strategy configuration"},"headers":[{"level":2,"title":"CachePluginStrategy reference","slug":"cachepluginstrategy-reference","link":"#cachepluginstrategy-reference","children":[{"level":3,"title":"debug","slug":"debug","link":"#debug","children":[]},{"level":3,"title":"enableEtag","slug":"enableetag","link":"#enableetag","children":[]},{"level":3,"title":"enableXCacheHeaders","slug":"enablexcacheheaders","link":"#enablexcacheheaders","children":[]},{"level":3,"title":"enableAdminCTBMiddleware","slug":"enableadminctbmiddleware","link":"#enableadminctbmiddleware","children":[]},{"level":3,"title":"resetOnStartup","slug":"resetonstartup","link":"#resetonstartup","children":[]},{"level":3,"title":"clearRelatedCache","slug":"clearrelatedcache","link":"#clearrelatedcache","children":[]},{"level":3,"title":"keysPrefix","slug":"keysprefix","link":"#keysprefix","children":[]},{"level":3,"title":"hitpass","slug":"hitpass","link":"#hitpass","children":[]},{"level":3,"title":"keys","slug":"keys","link":"#keys","children":[]},{"level":3,"title":"maxAge","slug":"maxage","link":"#maxage","children":[]},{"level":3,"title":"contentTypes","slug":"contenttypes","link":"#contenttypes","children":[]}]}],"relativePath":"guide/strategy/index.md","lastUpdated":1672538480000}'),l={name:"guide/strategy/index.md"},o=n(`<h1 id="cache-strategy-configuration" tabindex="-1">Cache strategy configuration <a class="header-anchor" href="#cache-strategy-configuration" aria-hidden="true">#</a></h1><p>The plugin will <strong>only inject cache middleware to Content-Types which have been explicitely enabled</strong>. This can be done by setting the <code>config.strategy.contentTypes</code> configuration.</p><p>It accept either a string or an object, so we can configure differently each Content-Type.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// file: /config/plugins.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">env</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">rest-cache</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">provider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">strategy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* @type {CachePluginStrategy} */</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">keysPrefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">project-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">maxAge</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3600000</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">contentTypes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [ </span><span style="color:#676E95;font-style:italic;">/** ... */</span><span style="color:#A6ACCD;"> ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>In addition to the <strong>contentType</strong> configuration, you can also set the default <strong>maxAge</strong>, <strong>hitpass</strong> and <strong>keys</strong> configuration, enables <strong>ETag</strong> and <strong>X-Cache</strong> headers or tune how the plugin will work for each route.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The plugin will not cache any request if the <code>Authorization</code> header is present on the request or if the <code>Cookie</code> header is present on the request. This is to prevent caching of private data.</p><p>You can change this behavior by setting the <code>config.strategy.hitpass</code> configuration.</p></div><h2 id="cachepluginstrategy-reference" tabindex="-1"><code>CachePluginStrategy</code> reference <a class="header-anchor" href="#cachepluginstrategy-reference" aria-hidden="true">#</a></h2><h3 id="debug" tabindex="-1"><code>debug</code> <a class="header-anchor" href="#debug" aria-hidden="true">#</a></h3><p>Enable extra log with <a href="https://www.npmjs.com/package/debug" target="_blank" rel="noreferrer">debug</a> package. This is usefull only when configuring the plugin.</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>false</code></li></ul><h3 id="enableetag" tabindex="-1"><code>enableEtag</code> <a class="header-anchor" href="#enableetag" aria-hidden="true">#</a></h3><p>Enable etag generation for response. Also enable etag lookup when <code>If-None-Match</code> header is present on requests. This add extra CPU overhead due to the etag computation but save bandwidth by sending <code>304 Not Modified</code> response.</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>false</code></li></ul><h3 id="enablexcacheheaders" tabindex="-1"><code>enableXCacheHeaders</code> <a class="header-anchor" href="#enablexcacheheaders" aria-hidden="true">#</a></h3><p>Add extra <code>X-Cache</code> headers to responses. This is usefull when configuring the plugin or when using behind a reverse proxy.</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>false</code></li></ul><h3 id="enableadminctbmiddleware" tabindex="-1"><code>enableAdminCTBMiddleware</code> <a class="header-anchor" href="#enableadminctbmiddleware" aria-hidden="true">#</a></h3><p>Register a middleware to handle cache invalidation requests performed using the admin UI.</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>true</code></li></ul><h3 id="resetonstartup" tabindex="-1"><code>resetOnStartup</code> <a class="header-anchor" href="#resetonstartup" aria-hidden="true">#</a></h3><p>Delete all cache entries from the provider on startup. This is usefull when performing a migration using an external cache provider.</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>false</code></li></ul><h3 id="clearrelatedcache" tabindex="-1"><code>clearRelatedCache</code> <a class="header-anchor" href="#clearrelatedcache" aria-hidden="true">#</a></h3><p>Try to delete all cache entries related to the deleted entry.</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>true</code></li></ul><h3 id="keysprefix" tabindex="-1"><code>keysPrefix</code> <a class="header-anchor" href="#keysprefix" aria-hidden="true">#</a></h3><p>Prefix added to the cache keys.</p><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>&#39;&#39;</code></li></ul><h3 id="hitpass" tabindex="-1"><code>hitpass</code> <a class="header-anchor" href="#hitpass" aria-hidden="true">#</a></h3><p>When true, the cache plugin will not lookup for cache and serve fresh response from backend instead. Also, the response is not stored in the cache.</p><ul><li><strong>Type:</strong> <code>(ctx: Context) =&gt; boolean</code></li><li><strong>Default:</strong></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hitpass</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ignore cache when authorization or cookie headers are present</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Boolean</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">headers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">authorization</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">headers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cookie</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="keys" tabindex="-1"><code>keys</code> <a class="header-anchor" href="#keys" aria-hidden="true">#</a></h3><p>Options used to generate the cache keys.</p><ul><li><strong>Type:</strong> <a href="#cachekeysconfig"><code>CacheKeysConfig</code></a></li></ul><h3 id="maxage" tabindex="-1"><code>maxAge</code> <a class="header-anchor" href="#maxage" aria-hidden="true">#</a></h3><p>Default max age for cached entries.</p><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Default:</strong> <code>3600000</code> (1 hour)</li></ul><h3 id="contenttypes" tabindex="-1"><code>contentTypes</code> <a class="header-anchor" href="#contenttypes" aria-hidden="true">#</a></h3><p>Specify each content types that should be cached. If a string is provided, default configuration from <a href="#cachecontenttypeconfig"><code>CacheContentTypeConfig</code></a> will be used</p><ul><li><strong>Type:</strong> <a href="#cachecontenttypeconfig"><code>(string|CacheContentTypeConfig)[]</code></a></li><li><strong>Default:</strong> <code>[]</code></li></ul>`,41),t=[o];function r(c,p,i,d,h,g){return a(),s("div",null,t)}const D=e(l,[["render",r]]);export{u as __pageData,D as default};
