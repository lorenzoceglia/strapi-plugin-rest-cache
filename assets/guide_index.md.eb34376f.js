import{_ as a,c as o,b as e,d as r,t as n,a as i,o as s}from"./app.4b6b3d2e.js";const f=JSON.parse('{"title":"Introduction","description":"","frontmatter":{"title":"Introduction"},"headers":[],"relativePath":"guide/index.md","lastUpdated":1672538480000}'),d={name:"guide/index.md"},c={id:"frontmatter-title",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),p=i('<p>This plugin inject a middleware that caches incoming <code>GET</code> requests on the strapi API, based on query params and Content-Type UID. The cache is automatically busted everytime a <code>PUT</code>, <code>PATCH</code>, <code>POST</code>, or <code>DELETE</code> request comes in or when an entity is updated through the admin panel. It can also be programmatically cleared via exposed services or admin routes.</p><p>The cache content is stored by a <a href="./provider/"><strong>provider</strong></a>, which can be either an in-memory provider, a redis connection, a file system, or any other custom provider.</p><p>You can set a <a href="./strategy/"><strong>strategy</strong></a> to tell what to cache and how much time responses should be cached. The cache will be invalidated when the related Content-Type is updated, so you <strong>never have to worry about stale data</strong>.</p><p>In addition, you can interact with the plugin through the admin panel, api admin routes or programmatically using internal services.</p>',4);function l(t,m,u,_,g,y){return s(),o("div",null,[e("h1",c,[r(n(t.$frontmatter.title)+" ",1),h]),p])}const v=a(d,[["render",l]]);export{f as __pageData,v as default};
