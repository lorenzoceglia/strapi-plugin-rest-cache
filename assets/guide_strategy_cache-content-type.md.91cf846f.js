import{_ as e,c as s,o as n,a}from"./app.4b6b3d2e.js";const g=JSON.parse('{"title":"Content types","description":"","frontmatter":{"title":"Content types"},"headers":[{"level":2,"title":"CacheContentTypeConfig reference","slug":"cachecontenttypeconfig-reference","link":"#cachecontenttypeconfig-reference","children":[{"level":3,"title":"injectDefaultRoutes","slug":"injectdefaultroutes","link":"#injectdefaultroutes","children":[]},{"level":3,"title":"hitpass","slug":"hitpass","link":"#hitpass","children":[]},{"level":3,"title":"routes","slug":"routes","link":"#routes","children":[]},{"level":3,"title":"contentType","slug":"contenttype","link":"#contenttype","children":[]},{"level":3,"title":"keys","slug":"keys","link":"#keys","children":[]},{"level":3,"title":"maxAge","slug":"maxage","link":"#maxage","children":[]}]}],"relativePath":"guide/strategy/cache-content-type.md","lastUpdated":1672538480000}'),t={name:"guide/strategy/cache-content-type.md"},o=a(`<h1 id="content-types" tabindex="-1">Content types <a class="header-anchor" href="#content-types" aria-hidden="true">#</a></h1><p>The plugin will <strong>only inject cache middleware to Content-Types which have been explicitely enabled</strong>. This can be done by setting the <code>config.strategy.contentTypes</code> configuration.</p><p>It accept either a string or an object, so we can configure differently each Content-Type.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// file: /config/plugins.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">env</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">rest-cache</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">provider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">strategy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">contentTypes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* @type {(string|CacheContentTypeConfig)[]} */</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// can be a string (the Content-Type UID)</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">api::article.article</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// or a custom CacheContentTypeConfig object</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">contentType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">api::pages.pages</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">},</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">        ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="cachecontenttypeconfig-reference" tabindex="-1"><code>CacheContentTypeConfig</code> reference <a class="header-anchor" href="#cachecontenttypeconfig-reference" aria-hidden="true">#</a></h2><h3 id="injectdefaultroutes" tabindex="-1"><code>injectDefaultRoutes</code> <a class="header-anchor" href="#injectdefaultroutes" aria-hidden="true">#</a></h3><p>When enabled, inject <a href="https://docs.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/rest-api.html#api-endpoints" target="_blank" rel="noreferrer">default routes</a> for each content type.</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>true</code></li></ul><h3 id="hitpass" tabindex="-1"><code>hitpass</code> <a class="header-anchor" href="#hitpass" aria-hidden="true">#</a></h3><p>When true, the cache plugin will not lookup for cache and serve fresh response from backend instead. Also, the response is not stored in the cache.</p><ul><li><strong>Type:</strong> <code>(ctx: Context) =&gt; boolean | boolean</code></li><li><strong>Default:</strong> <em>(inherit from <code>CachePluginStrategy</code> if set)</em></li></ul><h3 id="routes" tabindex="-1"><code>routes</code> <a class="header-anchor" href="#routes" aria-hidden="true">#</a></h3><p>Additionnal routes to register for this content type.</p><ul><li><strong>Type:</strong> <a href="./cache-custom-routes.html#cacherouteconfig-reference"><code>CacheRouteConfig[]</code></a></li><li><strong>Default:</strong> <code>[]</code></li></ul><h3 id="contenttype" tabindex="-1"><code>contentType</code> <a class="header-anchor" href="#contenttype" aria-hidden="true">#</a></h3><p>Content-Type UID to cache (e.g. <code>api::article.article</code>).</p><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>&#39;&#39;</code></li></ul><h3 id="keys" tabindex="-1"><code>keys</code> <a class="header-anchor" href="#keys" aria-hidden="true">#</a></h3><p>Options used to generate the cache keys.</p><ul><li><strong>Type:</strong> <a href="./cache-keys.html#cachekeysconfig-reference"><code>CacheKeysConfig</code></a></li><li><strong>Default:</strong> <em>(inherit from <code>CachePluginStrategy</code> if set)</em></li></ul><h3 id="maxage" tabindex="-1"><code>maxAge</code> <a class="header-anchor" href="#maxage" aria-hidden="true">#</a></h3><p>Default max age for cached entries.</p><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Default:</strong> <em>(inherit from <code>CachePluginStrategy</code> if set)</em></li></ul>`,23),l=[o];function c(p,r,i,h,d,y){return n(),s("div",null,l)}const C=e(t,[["render",c]]);export{g as __pageData,C as default};
